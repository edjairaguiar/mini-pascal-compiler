package compilador;

import AST.Programa;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author edjair
 */
public class telaSelecao extends javax.swing.JFrame {

    /**
     * Creates new form telaSelecao
     */
    public telaSelecao() {
        initComponents();
        //Exibe cabeçalho na tela inferior do programa
        String cabecalho = "Outputs/cabecalho.txt";

        try {
            textarea3.read(new FileReader(cabecalho), null);
        } catch (IOException ex) {
            System.out.println("problem accessing file" + cabecalho);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane2 = new javax.swing.JScrollPane();
        textarea = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        textarea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        textarea3 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuArquivo = new javax.swing.JMenu();
        Abrir = new javax.swing.JMenuItem();
        MenuExibir = new javax.swing.JMenu();
        exAST = new javax.swing.JMenuItem();
        exTID = new javax.swing.JMenuItem();
        exCOD = new javax.swing.JMenuItem();

        fileChooser.setDialogTitle("Esta é minha caixa de diálogo aberta");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textarea.setColumns(20);
        textarea.setRows(5);
        jScrollPane2.setViewportView(textarea);

        textarea2.setColumns(20);
        textarea2.setRows(5);
        jScrollPane1.setViewportView(textarea2);

        textarea3.setColumns(20);
        textarea3.setRows(5);
        jScrollPane3.setViewportView(textarea3);

        MenuArquivo.setText("Arquivo");

        Abrir.setText("Abrir");
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });
        MenuArquivo.add(Abrir);

        jMenuBar1.add(MenuArquivo);

        MenuExibir.setText("Exibir");

        exAST.setText("Árvore Sintática");
        exAST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exASTActionPerformed(evt);
            }
        });
        MenuExibir.add(exAST);

        exTID.setText("Tabela de Identificadores");
        exTID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exTIDActionPerformed(evt);
            }
        });
        MenuExibir.add(exTID);

        exCOD.setText("Código Gerado");
        exCOD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exCODActionPerformed(evt);
            }
        });
        MenuExibir.add(exCOD);

        jMenuBar1.add(MenuExibir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File pas = fileChooser.getSelectedFile();
            String file = pas.getAbsolutePath();
            String ast;
            String tabident;
            String cod;
            FileWriter fw = null;
            FileWriter gh = null;
            FileWriter cg = null;

            //Cria arquivo TABELA DE IDENTIFICADORES
            try {
                gh = new FileWriter(new File("Outputs/tabelaID.txt"));
            } catch (IOException ex) {
                Logger.getLogger(telaSelecao.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Cria arquivo ÁRVORE
            try {
                fw = new FileWriter(new File("Outputs/tree.txt"));
            } catch (IOException ex) {
                Logger.getLogger(telaSelecao.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Cria arquivo CÓDIGO GERADO
            try {
                cg = new FileWriter(new File("Outputs/codigo.txt"));
            } catch (IOException ex) {
                Logger.getLogger(telaSelecao.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Instâncias: 
            Programa program = null;
            Parser parser = new Parser();
            Printer printer = new Printer();
            Checker checker = new Checker();
            Coder coder = new Coder();

            //ARQUIVO DE PROGRAMA.PAS EXIBIDO NA TEXTAREA
            try {
                textarea.read(new FileReader(pas.getAbsolutePath()), null);
            } catch (IOException ex) {
                System.out.println("problem accessing file" + pas.getAbsolutePath());
            }

            //PARSE PARA PROGRAMA;
            try {
                program = parser.parse(file);
            } catch (Exception ex) {
                Logger.getLogger(telaSelecao.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                checker.check(program);
            } catch (IOException ex) {
                Logger.getLogger(telaSelecao.class.getName()).log(Level.SEVERE, null, ex);
            }

            //SALVA A AST NA VAR AST
            ast = printer.print(program);
            //SALVA A TABELA NA VAR TABIDENT
            tabident = checker.table.print();
            //SALVA O CODIGO NA VAR COD
            cod = coder.encode(program);

            //Salva AST num arquivo;
            try {
                fw.write(ast);
            } catch (IOException ex) {
                Logger.getLogger(telaSelecao.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(telaSelecao.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Salva Tabela num arquivo;
            try {
                gh.write(tabident);
            } catch (IOException ex) {
                Logger.getLogger(telaSelecao.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                gh.close();
            } catch (IOException ex) {
                Logger.getLogger(telaSelecao.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Salva Código num arquivo;
            try {
                cg.write(cod);
            } catch (IOException ex) {
                Logger.getLogger(telaSelecao.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                cg.close();
            } catch (IOException ex) {
                Logger.getLogger(telaSelecao.class.getName()).log(Level.SEVERE, null, ex);
            }

            String astadd = "Outputs/codigo.txt";
            try {
                textarea2.read(new FileReader(astadd), null);
            } catch (IOException ex) {
                System.out.println("problem accessing file" + astadd);
            }

            //DESEJA EXIBIR AST?
            //int resposta = JOptionPane.showConfirmDialog(null, "Deseja exibir a AST?", null, JOptionPane.YES_NO_OPTION);
            //if (resposta == JOptionPane.YES_OPTION) {
            //    String astadd = "src/tree.txt"; 
            //    try {
            //    textarea2.read( new FileReader( astadd ), null );
            //    } catch (IOException ex) {
            //    System.out.println("problem accessing file"+astadd);
            //   }
            //} else if (resposta == JOptionPane.NO_OPTION) {}
            String message = String.format("\t                       Geração de codigo concluida com sucesso! "
                    + "\n\nAtravés menu 'Exibir' é possível escolher entre as seguintes exibicoes:\n "
                    + "\n                                  > Arvore Sintatica Abstrata;"
                    + "\n                                  > Tabela de Identificadores;"
                    + "\n                                  > Codigo Gerado.\n"
                    + "\n\nOs arquivos gerados podem ser acessados apos a execucao na pasta 'Outputs'.");
            JOptionPane.showMessageDialog(null, message);

        } else {
            System.out.println("Acesso ao arquivo negado pelo usuario.");
        }

    }//GEN-LAST:event_AbrirActionPerformed

    private void exASTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exASTActionPerformed
        //Exibe árvore na seleção 
        String astadd = "Outputs/tree.txt";
        try {
            textarea2.read(new FileReader(astadd), null);
        } catch (IOException ex) {
            System.out.println("problem accessing file" + astadd);
        }
    }//GEN-LAST:event_exASTActionPerformed

    private void exTIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exTIDActionPerformed
        //Exibe tabela de identificadores na seleção
        String tabfile = "Outputs/tabelaID.txt";
        try {
            textarea2.read(new FileReader(tabfile), null);
        } catch (IOException ex) {
            System.out.println("problem accessing file" + tabfile);
        }
    }//GEN-LAST:event_exTIDActionPerformed

    private void exCODActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exCODActionPerformed
        //Exibe código gerado na seleção
        String tabfile = "Outputs/codigo.txt";
        try {
            textarea2.read(new FileReader(tabfile), null);
        } catch (IOException ex) {
            System.out.println("problem accessing file" + tabfile);
        }
    }//GEN-LAST:event_exCODActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaSelecao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaSelecao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaSelecao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaSelecao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new telaSelecao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Abrir;
    private javax.swing.JMenu MenuArquivo;
    private javax.swing.JMenu MenuExibir;
    private javax.swing.JMenuItem exAST;
    private javax.swing.JMenuItem exCOD;
    private javax.swing.JMenuItem exTID;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea textarea;
    private javax.swing.JTextArea textarea2;
    private javax.swing.JTextArea textarea3;
    // End of variables declaration//GEN-END:variables

    public static class textarea {

        public static void read(FileReader fileReader, Object object) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        public textarea() {

        }
    }
}
